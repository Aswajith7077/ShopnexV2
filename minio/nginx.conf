events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # Increase client body size for large uploads
    client_max_body_size 100M;
    
    # Proxy settings
    proxy_connect_timeout 300;
    proxy_send_timeout 300;
    proxy_read_timeout 300;
    send_timeout 300;
    
    upstream minio_api {
        server localhost:9000;
    }
    
    upstream minio_console {
        server localhost:9001;
    }
    
    server {
        listen 8080;
        listen 8443 ssl http2;
        server_name _;
        
        # SSL configuration
        ssl_certificate /etc/ssl/certs/server.crt;
        ssl_certificate_key /etc/ssl/private/server.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # Ignore favicon requests
        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # MinIO Console (Web UI) - accessible at /console
        location /console/ {
            # Remove /console from the path when forwarding
            rewrite ^/console/(.*) /$1 break;
            
            proxy_pass http://minio_console/;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-NginX-Proxy true;
            
            # WebSocket support for console
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        
        # MinIO API - accessible at /api
        location /api/ {
            # Remove /api from the path when forwarding
            rewrite ^/api/(.*) /$1 break;
            
            proxy_pass http://minio_api/;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-NginX-Proxy true;
        }
        
        # Direct MinIO API access (for S3 SDK compatibility)
        # This handles bucket operations that don't have /api prefix
        location ~ ^/([a-zA-Z0-9._-]+)/?(.*)$ {
            # Only proxy if it looks like a bucket name (not console routes)
            set $bucket $1;
            set $path $2;
            if ($bucket !~ ^(console|api|health)$) {
                proxy_pass http://minio_api/$bucket/$path;
            }
            
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-NginX-Proxy true;
        }
        
        # Root path - redirect to console
        location = / {
            return 301 /console/;
        }
        
        # Default location for anything else
        location / {
            proxy_pass http://minio_api;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-NginX-Proxy true;
        }
    }
}