name: Zevrin Backend CI

on:
  push:
    branches: [main, develop]
  pull_request:
  workflow_dispatch:

jobs:
  backend_ci:
    name: Zevrin Backend - build, lint & tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    services:
      mongo:
        image: mongo:7
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongosh --eval 'db.runCommand({ ping: 1 })'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          # Upgrade pip and setuptools
          python -m pip install --upgrade pip setuptools wheel

          # Verify requirements.txt exists
          if [ ! -f requirements.txt ]; then
            echo "Error: requirements.txt not found in $(pwd)"
            exit 1
          fi

          # Install requirements with verbose output and error handling
          python -m pip install -r requirements.txt -v || {
            echo "Failed to install dependencies"
            echo "Content of requirements.txt:"
            cat requirements.txt
            exit 1
          }

      - name: Build backend Docker image
        run: docker build -t my-app-backend:${{ github.sha }} .

      - name: Verify backend container starts
        run: |
          docker run -d --name backend-test -p 8000:8000 \
            --network ${{ job.container.network }} \
            -e MONGODB_URL="mongodb://mongo:27017" \
            my-app-backend:${{ github.sha }}
          for i in {1..30}; do
            curl -sSf http://localhost:8000/docs && exit 0 || sleep 2
          done
          echo "API did not become ready in time" && exit 1

      - name: Run lint & formatting checks
        run: make styles

      - name: Run pytest
        env:
          MONGODB_URL: mongodb://mongo:27017
        run: pytest tests/test_run.py -v --tb=short
